// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NTİerMapping.DAL;

#nullable disable

namespace NTİerMapping.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241028082626_Three")]
    partial class Three
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NTierMapping.DATA.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilmAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("IzlenmeSayisi")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedData")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SonYayinlanmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("KategoriId");

                    b.ToTable("Filmler");
                });

            modelBuilder.Entity("NTierMapping.DATA.FilmKategori", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ModifiedData")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FilmKategorileri");
                });

            modelBuilder.Entity("NTierMapping.DATA.Film", b =>
                {
                    b.HasOne("NTierMapping.DATA.FilmKategori", "FilmKategorisi")
                        .WithMany("KategorininFilmleri")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilmKategorisi");
                });

            modelBuilder.Entity("NTierMapping.DATA.FilmKategori", b =>
                {
                    b.Navigation("KategorininFilmleri");
                });
#pragma warning restore 612, 618
        }
    }
}
